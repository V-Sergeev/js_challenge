/*
Вы планируете совершить ограбление на улице Ленина, и вам известно сколько спрятано денег в каждом доме. Но есть проблема – в домах установлена система безопасности. Сигнализация срабатывает при проникновении в два соседних дома.

В вашем распоряжении массив не отрицательных целых чисел nums где каждый элемент представляет собой сумму денег спрятанную в каждом доме. Ваша задача расчитать максимальную сумму котою можно украсть не спровоцировав сигнализацию.

Например для nums = [5, 5, 5] результат должен быть равен 10 т.к. максимальная прибыль будет получена при грабеже 1ого и 3его домов.

Для nums = [1, 3, 1, 3, 100] результат должен быть равен 103
*/



function houseRobber(nums) {
    
    //функция - максимум в массиве, возвращает значение и позицию
    function findMax(arr){
      var result={
        maxValue:0
      };
    arr.forEach(function(item, i){
      if(item>res.maxValue){
        result.maxValue=item;
        result.indexOfMax=i;
      }
    });
      return result;
    };
//ищем максимум в исходном массиве    
var iter1= findMax(nums);
//массив без максимума и соседних с ним эл-тов
var subArr=nums.filter(function(item, i){
    return !(i==(iter1.indexOfMax-1) | i==iter1.indexOfMax | i==(iter1.indexOfMax+1));
        });
    
//ищем максимум в сформированном массиве  
var iter2=findMax(subArr);  
//результат - сумма максимумов
var v1=iter1.maxValue+iter2.maxValue;
//результат - сумма соседей максимума исходного массива
var v2=nums[iter1.indexOfMax-1] + nums[iter1.indexOfMax+1];
    
var result= isNaN(v2)? v1: v1>v2? v1: v2>v1? v2: "Неожиданный результат";
    return result; 
    
    
  }

nums = [5, 6, 7, 5, 7, 100];
 houseRobber(nums);